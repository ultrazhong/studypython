# 项目时间：2022/3/4 15:47
# 字符串的驻留机制，字符串是一个不可变的字符序列
a='python'
b="python"
c='''python'''
print(a,b,c)
print(id(a),id(b),id(c))
# 驻留机制：对创建多个相同的字符串将使用同一个内存地址
'''
    驻留机制的几种情况(交互模式)
    1、字符串的长度为0或者1时
    2、符合标识符的字符串
    3、字符串只在编译时进行驻留，而非运行时
    4、[-5,256]之间的整数数字
'''
'''
    在需要进行字符串拼接的场合建议使用str类型的join方法，而非+
    因为Join()方法是先计算出所有字符的长度，然后拷贝，只new一次对象
    效率要比+的效率高
'''
# 字符串的查询操作方法
'''
    查询方法
    1、index()   查找子串substr第一次出现的位置，不存在抛出ValueError
    2、rindex()  查找子串substr最后一次出现的位置，不存在抛出ValueError
    3、find()    查找子串substr第一次出现的位置，不存在返回-1
    4、rfine()   查找子串substr最后一次出现的位置，不存在返回-1
'''
'''
    大小写转换
    1、upper()   所有字符转换成大写
    2、lower()   都转成小写 
    3、swapcase()    大写转小写，小写转大写
    4、capitalize()  第一个字符转成大写，其余字符小写
    5、title()   每个单词第一个字符转换成大写，其余小写
'''
'''
    对齐操作的方法
    1、center()  居中，第一个参数指定宽度，第二个参数指定填充符
    2、ljust()   左对齐，第一个参数指定宽度，第二个参数指定填充符
    3、rjust()   右对齐，第一个参数指定宽度，第二个参数指定填充符
    4、zfill()   右对齐，左边用0填充，该方法只接收一个参数，用于指定字符串的宽度
'''
'''
    字符串劈分
    1、split()   从字符串的左边开始劈分，默认劈分字符是空格
                可以通过参数sep指定劈分字符串的劈分符
                通过参数maxsplit指定劈分字符串时的最大劈分次数
    2、rsplit()  从字符串的右边开始劈分
'''
'''
    判断字符串操作的方法
    1、isidentifier()    判断是不是合法的标识符
    2、isspace()         判断是否全部由空白字符串组成（回车、换行、水平制表符）
    3、isalpha()         判断是否全部由字母组成
    4、isdecimal()       判断是否全部由十进制组成
    5、isnumeric()       判断是否全部由数字组成
    6、isalnum()         判断是否全部由字符和数字组成
'''
'''
    1、replace()     字符串的替换  第一个参数指定被替换的子串，第二个参数指定替换字符串的字符串。
                                该方法返回替换后得到的字符串，替换前的字符串不发生变化，调用该
                                方法时可以通过第三个参数指定最大替换次数
    2、join()        字符串的合并  将列表或者元组中的字符串合并成一个字符串
'''
'''
    字符串的比较操作
    运算符：>/>=/</<=/==/!=
    比较原理：两个字符进行比较时，比较的是其ordinal value（原始值），调用内置函数ord可以得到指定
            字符的ordinal value。与内置函数ord对应的是内置函数chr，调用内置函数chr时指定
            ordinal value可以得到其对应的字符
'''
'''
    ==与is的区别
    ==比较的是value是否相等
    is比较的是id是否相等
'''
'''
    格式化字符串
    1、%作占位符
    2、{}作占位符
'''
name='张三'

age=20
print('我叫%s，今年%d岁。' % (name,age))
print('我叫{0}，今年{1}岁。'.format(name,age))
print(f'我叫{name}，今年{age}岁。')
print('%10d' % 99) # 10表示的是宽度
print('%.3f' % 3.1415926) # .3表示的是小数点后三位
print('%10.3f' % 3.1415926) # 一共总宽度为10，小数点后3位
print('hellohello')

print('{0}'.format(3.1415926))

print('{0:.3}'.format(3.1415926)) # .3表示的是一共3位数
print('{0:.3f}'.format(3.1415926)) # .3f表示的是3位小数
print('{0:10.3f}'.format(3.1415926)) # 10.3f表示的是宽度10和3位小数
print('hellohello')

# 字符串的编码转换
# 编码：将字符串转换为二进制数据bytes
# 解码：将bytes类型的数据转换成字符串类型
s='天涯共此时'
# 编码
print(s.encode(encoding='GBK'))     # 在GBK编码中，一个中文占两个字节
print(s.encode(encoding='UTF-8'))   # 在UTF-8编码中，一个中文占三个字节
# 解码
byte=s.encode(encoding='GBK')       # 编码
print(byte.decode(encoding='GBK'))  # 解码